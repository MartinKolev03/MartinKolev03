class MissingParameterError(Exception):
    pass
class InvalidParameterError(Exception):
    def __init__(self,invalid_parameter,*args):
        message=f"Invalid class parameter: {invalid_parameter}"
        super().__init__(message,*args)
class InvalidAgeError(InvalidParameterError):
    def __init__(self,age,*args):
        super().__init__(age,*args)
class InvalidSoundError(InvalidParameterError):
    def __init__(self, sound, *args):
        super().__init__(sound, *args)
class JungleAnimal():
    def __init__(self,name,age,sound):
        if(type(age)!=int):
            raise InvalidAgeError("age")
        if(type(name)!=str):
            raise InvalidParameterError("name")
        if (type(sound) != str):
            raise InvalidSoundError("sound")
        self.name=name
        self.age=age
        self.sound=sound
    def make_sound(self):
        print(self.name+" says "+self.sound)
    def print(self):
        pass
    def daily_task(self):
        pass
class Jaguar(JungleAnimal):
    def __init__(self,name,age,sound):
        super.__init(name,age,sound)
        if(age>15 or age<0):
            raise  InvalidAgeError("age")
        if(sound.count("r")<2):
            raise InvalidSoundError("sound")
    def print(self):
        print(f"Jaguar({self.name},{self.age},{self.sound})")
    def daily_task(self,animals):
        for e in animals:
            if(type(e)==Lemur or type(e)==Human):
                print(f"{self.name} the Jaguar hunted down {e.name} the {type(e).__name__}")
                animals.remove(e)
                return
class Lemur(JungleAnimal):
    pass
class Human(JungleAnimal):
    pass
